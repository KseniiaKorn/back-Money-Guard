{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Money Guard",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Money Guard is a personal finance tracking application. It allows users to create, edit, and view transactions, analyze statistics, and check their current balance. The app uses secure authentication with JWT tokens."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://moneyguard-app.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "User registration, login, token refresh, and logout functionality"
    },
    {
      "name": "Transactions",
      "description": "Creating, editing, deleting, and retrieving financial transactions"
    },
    {
      "name": "User",
      "description": "Retrieving user information and account balance"
    },
    {
      "name": "Currency",
      "description": "Fetching current exchange rates from the Monobank API"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a  user",
        "operationId": "loginUser",
        "description": "Login a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "anna@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "1QSET9xad"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "PnIvkETe3ogr7hSpeyKRZc5qVLW837r/hjNsVrW/"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401-login"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user by sessionId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "sessionId",
            "schema": {
              "type": "string",
              "example": "j%3A%22681a10304b7d89856843a146%22"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User logged out "
          },
          "401": {
            "$ref": "#/components/responses/401-logout"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Anna"
                  },
                  "email": {
                    "type": "string",
                    "example": "anna@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "1QSET9xad"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "message",
                    "user"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "user": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/refresh-session": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh session by refreshToken",
        "operationId": "refreshSession",
        "description": "Refresh session by cookies refreshToken",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "refreshToken",
            "schema": {
              "type": "string",
              "example": "nb97XuN7KYiylPuEcdXsG29G9iaekNOP5%2Feta3%2BL"
            }
          },
          {
            "in": "cookie",
            "name": "sessionId",
            "schema": {
              "type": "string",
              "example": "j%3A%22681a10304b7d89856843a146%22"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "PnIvkETe3ogr7hSpeyKRZc5qVLW837r/hjNsVrW/"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401-session"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get current users information",
        "operationId": "getUser",
        "description": "Get current users information",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/user/update/{userId}": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Get current users information",
        "operationId": "editUser",
        "description": "Get current users information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "680fb1a9311824996bbaf348"
            }
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "409": {
        "description": "User with this email already exist",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "message"
              ],
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Email already in use"
                }
              }
            }
          }
        }
      },
      "401-login": {
        "description": "Incorrect email or password",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "User not found",
                        "Password is incorrect"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401-logout": {
        "description": "Error with session",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Session not found"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401-session": {
        "description": "Errors with session or token",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Session not found",
                        "Session token expired"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "id"
        ],
        "properties": {
          "name": {
            "description": "User name",
            "type": "string",
            "example": "Anna"
          },
          "email": {
            "description": "User email",
            "type": "string",
            "example": "anna@mail.com"
          },
          "id": {
            "description": "User id",
            "type": "string",
            "example": "681a09af61bdc00bfe787f44"
          }
        }
      }
    }
  }
}